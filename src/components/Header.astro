---
const currentPath = Astro.url.pathname;

const navItems = [
  { name: 'Beranda', href: '/', current: currentPath === '/' },
  { name: 'Blog', href: '/blog', current: currentPath.startsWith('/blog') },
  { name: 'Tentang', href: '/about', current: currentPath === '/about' },
  { name: 'Kontak', href: '/contact', current: currentPath === '/contact' },
];
---

<header class="bg-white shadow-sm border-b border-secondary-100 sticky top-0 z-50">
  <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a href="/" class="flex items-center space-x-2">
          <div class="w-8 h-8 bg-gradient-to-br from-primary-500 to-primary-700 rounded-lg flex items-center justify-center">
            <span class="text-white font-bold text-lg">C</span>
          </div>
          <span class="text-xl font-bold text-secondary-900">Cuandemy</span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden md:block">
        <div class="ml-10 flex items-baseline space-x-4">
          {navItems.map((item) => (
            <a
              href={item.href}
              class={`px-3 py-2 rounded-md text-sm font-medium transition-colors duration-200 ${
                item.current
                  ? 'bg-primary-50 text-primary-700 border-b-2 border-primary-500'
                  : 'text-secondary-600 hover:text-primary-600 hover:bg-primary-50'
              }`}
            >
              {item.name}
            </a>
          ))}
        </div>
      </div>

      <!-- CTA Button -->
      <div class="hidden md:block">
        <a
          href="/blog"
          class="bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors duration-200 shadow-sm hover:shadow-md"
        >
          Mulai Membaca
        </a>
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button
          type="button"
          class="mobile-menu-button inline-flex items-center justify-center p-2 rounded-md text-secondary-600 hover:text-primary-600 hover:bg-primary-50 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-primary-500"
          aria-controls="mobile-menu"
          aria-expanded="false"
        >
          <span class="sr-only">Buka menu utama</span>
          <!-- Hamburger icon -->
          <svg class="block h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile menu -->
    <div class="mobile-menu hidden md:hidden">
      <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3 bg-white border-t border-secondary-100">
        {navItems.map((item) => (
          <a
            href={item.href}
            class={`block px-3 py-2 rounded-md text-base font-medium transition-colors duration-200 ${
              item.current
                ? 'bg-primary-50 text-primary-700'
                : 'text-secondary-600 hover:text-primary-600 hover:bg-primary-50'
            }`}
          >
            {item.name}
          </a>
        ))}
        <div class="pt-4">
          <a
            href="/blog"
            class="block w-full text-center bg-primary-600 hover:bg-primary-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors duration-200"
          >
            Mulai Membaca
          </a>
        </div>
      </div>
    </div>
  </nav>
</header>

<script>
  // Mobile menu toggle
  document.addEventListener('DOMContentLoaded', function() {
    const mobileMenuButton = document.querySelector('.mobile-menu-button');
    const mobileMenu = document.querySelector('.mobile-menu');
    
    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener('click', function() {
        const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
        mobileMenuButton.setAttribute('aria-expanded', (!isExpanded).toString());
        mobileMenu.classList.toggle('hidden');
      });
    }
  });
</script>
